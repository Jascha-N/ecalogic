(* 
  the BUG component has state-update functions that have no fixed points

  BUG consists of one counter.

   ::inc()   increases the value of the counter 
	(monotonic, but does not have a fixpoint, cannot be caught since we use BigInt)

   ::neg()   negates the value of the counter
	(non-monotinic, does not have a fixpoint, caught by safety net)

  If you replace ::neg with ::inc, the analyser will hang trying to find a fixpoint. 

  Note that every monotonic function that works on a finite, partially ordered set has a fixed point,
  i.e. an x such that f(x) = x

 *)

function program(X)
  BUG::inc();
  while 1 < 2 bound 5 do
    BUG::neg()  
  end while
end function
